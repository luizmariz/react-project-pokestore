{"version":3,"sources":["utils/helpers.js","redux/middlewares/logger.js","services/pokemonService.js","redux/features/cart/cartSlice.js","redux/features/pokemon/pokemonSlice.js","redux/store.js","reportWebVitals.js","assets/images/pokestore-logo.png","pages/PokeStoreHome/PokeStoreHome.js","hooks/usePrevious.js","hooks/useSetupStore.js","components/Header/Header.js","components/PokemonList/PokemonList.js","components/Pokemon/Pokemon.js","pages/StoreHome/StoreHome.js","components/CartList/CartList.js","components/CartItem/CartItem.js","pages/ShoppingCart/ShoppingCart.js","hooks/useFetch.js","pages/PokemonDetails/PokemonDetails.js","pages/GrassStore/GrassStore.js","pages/FireStore/FireStore.js","pages/WaterStore/WaterStore.js","App.js","index.js"],"names":["mockPokemonPrice","pokemon","map","p","price","Math","floor","random","logger","store","next","action","endpoint","process","pokemonService","getAllPokemonByType","type","a","axios","get","res","promises","data","url","Promise","all","getPokemonById","id","GRASS_STORE_KEY","FIRE_STORE_KEY","WATER_STORE_KEY","cartAdapter","createEntityAdapter","initialState","getInitialState","totalByStore","numberOfItemsByStore","numberOfItemsByStoreById","idsByStore","cartSlice","createSlice","name","reducers","addItemToCart","reducer","state","addOne","meta","payload","includes","push","prepare","item","removeItemFromCart","entities","filter","removeOne","checkoutCart","updateCartPrices","priceById","reduce","acc","cur","changes","newTotalByStore","Object","keys","forEach","ids","numberOfItemsById","total","updateMany","actions","fetchPokemonByType","createAsyncThunk","thunkAPI","getState","cart","entitiesToUpdate","dispatch","e","pokemonSlice","status","error","removeAll","extraReducers","builder","addCase","pending","fulfilled","newEntities","rejected","message","selectAllPokemon","values","removeAllPokemon","config","cartReducer","middleware","getDefaultMiddleware","concat","devTools","persistedCart","serializedCart","localStorage","getItem","JSON","parse","err","getPersistedCart","preloadedState","configureStore","subscribe","stringify","setItem","persistCart","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","PokeStoreHome","className","src","logo","alt","path","iconClass","badgeStyle","to","usePrevious","value","ref","useRef","useEffect","current","useSetupStore","pokemonType","storeCartKey","prevPokemonType","history","useHistory","useRouteMatch","useState","searchInputValue","setSearchInputValue","filteredPokemon","setFilteredPokemon","useDispatch","useSelector","itemsOnCart","handleSearch","preventDefault","str","toLowerCase","simplePokemonSearchByName","handleSearchInputChange","target","handleAddPokemonToCart","handleCartClick","Header","storeName","storePath","searchInputPlaceholder","onSearchInputChange","onSearch","onCartClick","headerClass","searchBtnClass","itemsCartCounter","placeholder","onChange","onKeyDown","key","data-testid","onClick","defaultProps","PokemonList","children","Pokemon","spriteUrl","onAddToCart","href","StoreHome","onAddPokemonToCart","sprites","front_default","PropTypes","arrayOf","object","func","CartList","CartItem","onRemoveFromCart","amount","ShoppingCart","pokemonBitmapClass","checkoutBtnClass","checkoutDialog","pokemonOnCart","numberOfPokemonById","selectNumberOfItemsByStoreById","selectTotalByStore","handleRemovePokemonFromCart","console","log","length","showModal","disabled","method","close","fetchReducer","useFetch","req","params","useReducer","simpleCache","terminate","toString","replace","fetchData","PokemonDetails","pokemonId","useParams","versions","animated","height","weight","base_experience","front_shiny","back_shiny","STORE_CART_KEY","GrassStore","exact","style","marginTop","FireStore","WaterStore","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a96c7dd.chunk.js","sourcesContent":["export const mockPokemonPrice = (pokemon) =>\n  pokemon.map((p) => {\n    p.price = Math.floor(Math.random() * 10000) + 1;\n    return p;\n  });\n\n/**\n *  No pior caso são 1118 pokémons. Como a api fornece a busca apenas pelo nome completo ou id\n *  do pokémon, não vi mal em usar um filtro do lado do cliente para permitir a busca pelo nome parcial.\n *  Reitero que isso é uma má prática e não deve ser exercida em aplicações reais rs (Inclusive, envolvendo paginação isso seria um desastre)\n */\nexport const simplePokemonSearchByName = (pokemon, str) =>\n  pokemon.filter((p) => p.name.toLowerCase().includes(str.toLowerCase()));\n\nexport const getPersistedCart = () => {\n  try {\n    const serializedCart = localStorage.getItem('cart');\n    if (!serializedCart) {\n      return null;\n    }\n    return JSON.parse(serializedCart);\n  } catch (err) {\n    // console.log(err);\n    return null;\n  }\n};\n\nexport const persistCart = (state) => {\n  try {\n    const serializedCart = JSON.stringify(state);\n    localStorage.setItem('cart', serializedCart);\n    // eslint-disable-next-line no-empty\n  } catch {}\n};\n","const logger = (store) => (next) => (action) => {\n  if (process.env.NODE_ENV !== 'production') {\n    console.group(action.type);\n    console.log('Action: ', action);\n  }\n\n  const returnValue = next(action);\n\n  if (process.env.NODE_ENV !== 'production') {\n    console.log('New state: ', store.getState());\n    console.groupEnd();\n  }\n\n  return returnValue;\n};\n\nexport default logger;\n","import axios from 'axios';\nimport { mockPokemonPrice } from 'utils/helpers';\n\nconst endpoint =\n  process.env.NODE_ENV === 'production'\n    ? process.env.REACT_APP_POKEMEN_API_ENDPOINT_PROD\n    : process.env.REACT_APP_POKEMON_API_ENDPOINT;\n\nconst pokemonService = {\n  getAllPokemonByType: async (type) => {\n    const res = await axios.get(`${endpoint}/type/${type}`);\n\n    const promises = res.data.pokemon.map((pokemon) => axios.get(pokemon.pokemon.url));\n    const pokemon = await Promise.all(promises);\n\n    return mockPokemonPrice(pokemon.map((p) => p.data));\n  },\n  getPokemonById: async (id) => {\n    const res = await axios.get(`${endpoint}/pokemon/${id}`);\n    return res.data;\n  }\n};\n\nexport default pokemonService;\n","import { createSlice, createEntityAdapter } from '@reduxjs/toolkit';\n\nconst GRASS_STORE_KEY = process.env.REACT_APP_GRASS_STORE_CART_KEY;\nconst FIRE_STORE_KEY = process.env.REACT_APP_FIRE_STORE_CART_KEY;\nconst WATER_STORE_KEY = process.env.REACT_APP_WATER_STORE_CART_KEY;\n\nconst cartAdapter = createEntityAdapter();\n\nconst initialState = cartAdapter.getInitialState({\n  totalByStore: {\n    [GRASS_STORE_KEY]: 0,\n    [FIRE_STORE_KEY]: 0,\n    [WATER_STORE_KEY]: 0\n  },\n  numberOfItemsByStore: {\n    [GRASS_STORE_KEY]: 0,\n    [FIRE_STORE_KEY]: 0,\n    [WATER_STORE_KEY]: 0\n  },\n  numberOfItemsByStoreById: {\n    [GRASS_STORE_KEY]: {},\n    [FIRE_STORE_KEY]: {},\n    [WATER_STORE_KEY]: {}\n  },\n  idsByStore: {\n    [GRASS_STORE_KEY]: [],\n    [FIRE_STORE_KEY]: [],\n    [WATER_STORE_KEY]: []\n  }\n});\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addItemToCart: {\n      reducer(state, action) {\n        cartAdapter.addOne(state, action);\n\n        if (state.numberOfItemsByStoreById[action.meta.store][action.payload.id]) {\n          state.numberOfItemsByStoreById[action.meta.store][action.payload.id] += 1;\n        } else {\n          state.numberOfItemsByStoreById[action.meta.store][action.payload.id] = 1;\n        }\n\n        state.totalByStore[action.meta.store] += action.payload.price;\n        state.numberOfItemsByStore[action.meta.store] += 1;\n\n        if (!state.idsByStore[action.meta.store].includes(action.payload.id)) {\n          state.idsByStore[action.meta.store].push(action.payload.id);\n        }\n      },\n      prepare({ item, store }) {\n        return {\n          payload: item,\n          meta: { store }\n        };\n      }\n    },\n    removeItemFromCart: {\n      reducer(state, action) {\n        state.totalByStore[action.meta.store] -= state.entities[action.payload].price;\n        state.numberOfItemsByStore[action.meta.store] -= 1;\n        state.numberOfItemsByStoreById[action.meta.store][action.payload] -= 1;\n\n        if (state.numberOfItemsByStoreById[action.meta.store][action.payload] === 0) {\n          state.idsByStore[action.meta.store] = state.idsByStore[action.meta.store].filter(\n            (id) => id !== action.payload\n          );\n          cartAdapter.removeOne(state, action);\n        }\n      },\n      prepare({ id, store }) {\n        return {\n          payload: id,\n          meta: { store }\n        };\n      }\n    },\n    checkoutCart: (state, action) => {\n      const store = action.payload;\n\n      state.totalByStore[store] = 0;\n      state.numberOfItemsByStore[store] = 0;\n      state.numberOfItemsByStoreById[store] = {};\n      state.idsByStore[store] = [];\n    },\n    updateCartPrices: (state, action) => {\n      const priceById = action.payload.reduce((acc, cur) => {\n        acc[cur.id] = cur.changes.price;\n        return acc;\n      }, {});\n\n      const newTotalByStore = {};\n\n      Object.keys(state.totalByStore).forEach((store) => {\n        const ids = state.idsByStore[store];\n        const numberOfItemsById = state.numberOfItemsByStoreById[store];\n\n        let total = 0;\n\n        ids.forEach((id) => {\n          const price = priceById[id] ? priceById[id] : state.entities[id].price;\n          total += price * numberOfItemsById[id];\n        });\n\n        newTotalByStore[store] = total;\n      });\n\n      state.totalByStore = newTotalByStore;\n      cartAdapter.updateMany(state, action);\n    }\n  }\n});\n\nexport const selectNumberOfItemsByStoreById = (store) => (state) =>\n  state.cart.numberOfItemsByStoreById[store];\nexport const selectNumberOfItemsByStore = (store) => (state) =>\n  state.cart.numberOfItemsByStore[store];\nexport const selectTotalByStore = (store) => (state) => state.cart.totalByStore[store];\nexport const selectAllCartItemByStore = (store) => (state) =>\n  state.cart.idsByStore[store].map((id) => state.cart.entities[id]);\n\nexport const { addItemToCart, removeItemFromCart, checkoutCart, updateCartPrices } =\n  cartSlice.actions;\n\nexport default cartSlice.reducer;\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nimport pokemonService from 'services/pokemonService';\n\nimport { updateCartPrices } from '../cart/cartSlice';\n\nconst initialState = {\n  status: 'idle',\n  error: null,\n  entities: {}\n};\n\nexport const fetchPokemonByType = createAsyncThunk(\n  'pokemon/fetchPokemonByType',\n  async (type, thunkAPI) => {\n    const res = await pokemonService.getAllPokemonByType(type);\n\n    // Precisamos atualizar os preços do carrinho na localStorage\n    const { cart } = thunkAPI.getState();\n    const entitiesToUpdate = res.filter((p) => cart.ids.includes(p.id));\n\n    thunkAPI.dispatch(\n      updateCartPrices(entitiesToUpdate.map((e) => ({ id: e.id, changes: { price: e.price } })))\n    );\n\n    return res;\n  }\n);\n\nconst pokemonSlice = createSlice({\n  name: 'pokemon',\n  initialState,\n  reducers: {\n    removeAll: (state) => {\n      state.entities = [];\n      state.status = 'idle';\n    }\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchPokemonByType.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchPokemonByType.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n\n        const newEntities = {};\n\n        action.payload.forEach((pokemon) => {\n          newEntities[pokemon.id] = pokemon;\n        });\n\n        state.entities = newEntities;\n      })\n      .addCase(fetchPokemonByType.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.error.message;\n      });\n  }\n});\n\nexport const selectAllPokemon = (state) =>\n  state.pokemon.entities ? Object.values(state.pokemon.entities) : [];\n\nexport const selectPriceByPokemonId = (id) => (state) =>\n  state.pokemon.entities[id] ? state.pokemon.entities[id].price : null;\n\nexport const { removeAll: removeAllPokemon } = pokemonSlice.actions;\n\nexport default pokemonSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport { getPersistedCart, persistCart } from '../utils/helpers';\n\nimport logger from './middlewares/logger';\n\nimport pokemonReducer from './features/pokemon/pokemonSlice';\nimport cartReducer from './features/cart/cartSlice';\n\nconst reducer = {\n  pokemon: pokemonReducer,\n  cart: cartReducer\n};\n\nconst config = {\n  reducer,\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\n  devTools: process.env.NODE_ENV !== 'production'\n};\n\nconst persistedCart = getPersistedCart();\n\nif (persistedCart) {\n  config.preloadedState = {\n    cart: persistedCart\n  };\n}\n\nconst store = configureStore(config);\n\nstore.subscribe(() => {\n  const cartState = store.getState().cart;\n  persistCart(cartState);\n});\n\nexport default store;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/pokestore-logo.8e93dbcd.png\";","import { Link } from 'react-router-dom';\n\nimport './PokeStoreHome.scss';\n\nimport logo from 'assets/images/pokestore-logo.png';\n\nfunction PokeStoreHome() {\n  const stores = [\n    {\n      path: '/grass-store',\n      iconClass: 'nes-bulbasaur',\n      name: 'PLANTA',\n      badgeStyle: 'is-success'\n    },\n    {\n      path: '/fire-store',\n      iconClass: 'nes-charmander',\n      name: 'FOGO',\n      badgeStyle: 'is-error'\n    },\n    {\n      path: '/water-store',\n      iconClass: 'nes-squirtle',\n      name: 'ÁGUA',\n      badgeStyle: 'is-primary'\n    }\n  ];\n\n  return (\n    <section className=\"l-choose-store-wrapper\">\n      <div className=\"c-choose-store l-grid\">\n        <div className=\"l-grid__col-4 l-flex--column--center--middle\">\n          <img src={logo} alt=\"Pokestore logo\" className=\"c-choose-store__pokestore-logo\" />\n          <ul className=\"l-container l-flex--center\">\n            {stores.map((store) => (\n              <li className=\"l-container__item\" key={`${store.name}/${store.path}`}>\n                <Link\n                  to={store.path}\n                  className=\"c-choose-store__pokestore-link l-flex--column--center--middle\"\n                >\n                  <div className=\"nes-badge\">\n                    <span className={store.badgeStyle}>{store.name}</span>\n                  </div>\n                  <i className={store.iconClass} />\n                  <i className=\"nes-pokeball\" />\n                </Link>\n              </li>\n            ))}\n          </ul>\n          <div className=\"nes-container is-rounded is-dark\">\n            <p>\n              Capturar pokémon pode ser uma atividade cansativa. Por isso, a pokestore oferece uma\n              rede de marketplaces para que você, treinador, possa comprar os seus tipos favoritos\n              de pokemon do conforto da sua casa.\n            </p>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default PokeStoreHome;\n","import { useEffect, useRef } from 'react';\n\nfunction usePrevious(value) {\n  const ref = useRef();\n\n  useEffect(() => {\n    ref.current = value;\n  });\n\n  return ref.current;\n}\n\nexport default usePrevious;\n","import { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\n\nimport { simplePokemonSearchByName } from 'utils/helpers';\n\nimport {\n  fetchPokemonByType,\n  selectAllPokemon,\n  removeAllPokemon\n} from 'redux/features/pokemon/pokemonSlice';\n\nimport { addItemToCart, selectNumberOfItemsByStore } from 'redux/features/cart/cartSlice';\n\nimport usePrevious from './usePrevious';\n\nfunction useSetupStore(pokemonType, storeCartKey) {\n  const prevPokemonType = usePrevious(pokemonType);\n\n  const history = useHistory();\n  const { path } = useRouteMatch();\n\n  const [searchInputValue, setSearchInputValue] = useState('');\n  const [filteredPokemon, setFilteredPokemon] = useState([]);\n\n  const dispatch = useDispatch();\n\n  const pokemon = useSelector(selectAllPokemon);\n  const status = useSelector((state) => state.pokemon.status);\n\n  const itemsOnCart = useSelector(selectNumberOfItemsByStore(storeCartKey));\n\n  useEffect(() => {\n    if (prevPokemonType !== pokemonType) {\n      dispatch(removeAllPokemon());\n    }\n\n    if (status === 'idle') {\n      dispatch(fetchPokemonByType(pokemonType));\n    }\n\n    if (pokemon) {\n      setFilteredPokemon(pokemon);\n    }\n  }, [pokemonType, status]);\n\n  const handleSearchInputChange = (e) => {\n    const { value } = e.target;\n    setSearchInputValue(value);\n\n    if (value === '') {\n      setFilteredPokemon(pokemon);\n    }\n  };\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    setFilteredPokemon(simplePokemonSearchByName(pokemon, searchInputValue));\n    history.push(`${path}`);\n  };\n\n  const handleAddPokemonToCart = (p) => {\n    dispatch(addItemToCart({ item: p, store: storeCartKey }));\n  };\n\n  const handleCartClick = (e) => {\n    e.preventDefault();\n    history.push(`${path}/shopping-cart`);\n  };\n\n  return {\n    path,\n    searchInputValue,\n    filteredPokemon,\n    status,\n    itemsOnCart,\n    handleSearch,\n    handleSearchInputChange,\n    handleAddPokemonToCart,\n    handleCartClick\n  };\n}\n\nexport default useSetupStore;\n","import { Link } from 'react-router-dom';\nimport './Header.scss';\n\nimport PropTypes from 'prop-types';\n\nfunction Header({\n  storeName,\n  storePath,\n  searchInputPlaceholder,\n  searchInputValue,\n  onSearchInputChange,\n  onSearch,\n  onCartClick,\n  headerClass,\n  searchBtnClass,\n  itemsCartCounter\n}) {\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      onSearch(e);\n    }\n  };\n\n  return (\n    <header className=\"c-header\">\n      <section className=\"c-header__banner\">\n        <div className=\"l-grid l-grid--tab l-grid--lg\">\n          <h5>\n            Rede pokestore. Você pode visitar outra das nossas lojas <Link to=\"/\">aqui</Link>!\n          </h5>\n        </div>\n      </section>\n      <section className={`c-header__content ${headerClass}`}>\n        <div className=\"l-grid l-grid--tab l-grid--lg\">\n          <div className=\"l-grid__col-4 l-grid__col-8--tab l-grid__col-4--lg l-flex--middle\">\n            <Link to={storePath}>\n              <h1 className=\"c-header__title\">{storeName}</h1>\n            </Link>\n          </div>\n          <div className=\"l-grid__col-4 l-grid__col-8--tab l-grid__col-start-5--lg l-grid__col-end-10--lg l-flex\">\n            <input\n              type=\"text\"\n              id=\"name_field\"\n              className=\"nes-input\"\n              placeholder={searchInputPlaceholder}\n              value={searchInputValue}\n              onChange={onSearchInputChange}\n              onKeyDown={handleKeyDown}\n            />\n            <button\n              data-testid=\"search-btn\"\n              type=\"button\"\n              className={`nes-btn ${searchBtnClass}`}\n              onClick={onSearch}\n            >\n              Buscar\n            </button>\n          </div>\n          <div className=\"l-grid__col-4 l-grid__col-8--tab l-grid__col-start-11--lg l-grid__col-end-12--lg l-flex\">\n            <button type=\"button\" className=\"nes-btn c-header__cart-btn\" onClick={onCartClick}>\n              Carrinho ({itemsCartCounter})\n            </button>\n          </div>\n        </div>\n      </section>\n    </header>\n  );\n}\n\nHeader.propTypes = {\n  storeName: PropTypes.string,\n  storePath: PropTypes.string,\n  searchInputPlaceholder: PropTypes.string,\n  searchInputValue: PropTypes.string,\n  headerClass: PropTypes.string,\n  searchBtnClass: PropTypes.string,\n  itemsCartCounter: PropTypes.number,\n  onCartClick: PropTypes.func,\n  onSearch: PropTypes.func,\n  onSearchInputChange: PropTypes.func\n};\n\nHeader.defaultProps = {\n  storeName: '',\n  storePath: '',\n  searchInputPlaceholder: 'Busque aqui o seu pokemon',\n  searchInputValue: '',\n  headerClass: '',\n  searchBtnClass: '',\n  itemsCartCounter: 0,\n  onSearch: () => {},\n  onSearchInputChange: () => {},\n  onCartClick: () => {}\n};\n\nexport default Header;\n","import PropTypes from 'prop-types';\n\nfunction PokemonList({ children }) {\n  return <ul className=\"l-container l-container--tab l-container--lg\">{children}</ul>;\n}\n\nPokemonList.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.element).isRequired\n};\n\nexport default PokemonList;\n","import { Link } from 'react-router-dom';\nimport './Pokemon.scss';\n\nimport PropTypes from 'prop-types';\n\nfunction Pokemon({ id, name, price, spriteUrl, onAddToCart, href }) {\n  const handleAddToCartClick = (e) => {\n    e.preventDefault();\n    onAddToCart({ id, name, price });\n  };\n\n  return (\n    <li className=\"l-container__col-4 l-container__col-4--tab l-container__col-2--lg\">\n      <Link to={href} className=\"c-store-home__pokemon-card\">\n        <div className=\"c-pokemon l-flex--column--middle--center\">\n          <img src={spriteUrl} alt={`${name} front sprite`} className=\"c-pokemon__sprite\" />\n          <h5 data-testid=\"pokemon-name\">{name}</h5>\n          <p>\n            <i className=\"nes-icon coin is-small\" />\n            <span data-testid=\"pokemon-price\">{price}</span>\n          </p>\n          <button type=\"button\" className=\"nes-btn\" onClick={handleAddToCartClick}>\n            + Carrinho\n          </button>\n        </div>\n      </Link>\n    </li>\n  );\n}\n\nPokemon.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  price: PropTypes.number,\n  spriteUrl: PropTypes.string,\n  onAddToCart: PropTypes.func,\n  href: PropTypes.string\n};\n\nPokemon.defaultProps = {\n  id: 0,\n  name: '',\n  price: 0,\n  href: '',\n  spriteUrl: '',\n  onAddToCart: () => {}\n};\n\nexport default Pokemon;\n","import PropTypes from 'prop-types';\n\nimport './StoreHome.scss';\n\nimport PokemonList from 'components/PokemonList';\nimport Pokemon from 'components/Pokemon';\n\nfunction StoreHome({ pokemon, onAddPokemonToCart, path }) {\n  return (\n    <div className=\"l-grid l-grid--tab l-grid--lg c-store-home\">\n      <div className=\"l-grid__col-4 l-grid__col-8--tab l-grid__col-12--lg\">\n        {/* {!pokemon.length && <p className=\"c-store-home__not-found\">Nenhum pokémon encontrado :(</p>} */}\n        <PokemonList>\n          {pokemon.map((p) => (\n            <Pokemon\n              key={`pokemon-${p.id}`}\n              id={p.id}\n              name={p.name}\n              spriteUrl={p.sprites.front_default}\n              price={p.price}\n              onAddToCart={onAddPokemonToCart}\n              href={`${path}/pokemon/${p.id}`}\n            />\n          ))}\n        </PokemonList>\n      </div>\n    </div>\n  );\n}\n\nStoreHome.propTypes = {\n  path: PropTypes.string,\n  pokemon: PropTypes.arrayOf(PropTypes.object),\n  onAddPokemonToCart: PropTypes.func\n};\n\nStoreHome.defaultProps = {\n  path: '',\n  pokemon: PropTypes.arrayOf(PropTypes.object),\n  onAddPokemonToCart: PropTypes.func\n};\n\nexport default StoreHome;\n","import PropTypes from 'prop-types';\n\nimport './CartList.scss';\n\nfunction CartList({ children }) {\n  return (\n    <div className=\"c-cart-list\">\n      <ul>{children}</ul>\n    </div>\n  );\n}\n\nCartList.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.element).isRequired\n};\n\nexport default CartList;\n","import PropTypes from 'prop-types';\n\nimport './CartItem.scss';\n\nfunction CartItem({ id, name, price, onRemoveFromCart, amount }) {\n  const handleRemoveCartItem = (e) => {\n    e.preventDefault();\n    onRemoveFromCart(id);\n  };\n\n  return (\n    <li className=\"c-cart-item l-flex--between--middle--wrap\">\n      <div className=\"l-flex--middle\">\n        <i className=\"nes-pokeball\" />\n        <span className=\"c-cart-item__name\">\n          {name}({amount})\n        </span>\n      </div>\n      <div className=\"l-flex--middle\">\n        <i className=\"nes-icon coin is-small c-cart-item__price-icon\" />\n        <span className=\"c-cart-item__price\">{price}</span>\n        <button type=\"button\" className=\"nes-btn is-warning\" onClick={handleRemoveCartItem}>\n          <i className=\"nes-icon close is-small \" />\n        </button>\n      </div>\n    </li>\n  );\n}\n\nCartItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired,\n  onRemoveFromCart: PropTypes.func,\n  amount: PropTypes.number.isRequired\n};\n\nCartItem.defaultProps = {\n  onRemoveFromCart: () => {}\n};\n\nexport default CartItem;\n","import { useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport './ShoppingCart.scss';\n\nimport {\n  selectAllCartItemByStore,\n  selectNumberOfItemsByStoreById,\n  selectTotalByStore,\n  removeItemFromCart,\n  checkoutCart\n} from 'redux/features/cart/cartSlice';\n\nimport CartList from 'components/CartList';\nimport CartItem from 'components/CartItem';\n\nfunction ShoppingCart({ storeCartKey, pokemonBitmapClass, checkoutBtnClass }) {\n  const checkoutDialog = useRef();\n\n  const dispatch = useDispatch();\n\n  const pokemonOnCart = useSelector(selectAllCartItemByStore(storeCartKey));\n  const numberOfPokemonById = useSelector(selectNumberOfItemsByStoreById(storeCartKey));\n  const total = useSelector(selectTotalByStore(storeCartKey));\n\n  const handleRemovePokemonFromCart = (id) => {\n    console.log(storeCartKey);\n    dispatch(removeItemFromCart({ id, store: storeCartKey }));\n  };\n\n  const handleCheckout = (e) => {\n    e.preventDefault();\n    dispatch(checkoutCart(storeCartKey));\n    checkoutDialog.current.showModal();\n  };\n\n  const handleCloseDialog = (e) => {\n    e.preventDefault();\n    checkoutDialog.current.close();\n  };\n\n  return (\n    <>\n      <section className=\"l-grid l-grid--tab l-grid--lg c-shopping-cart\">\n        <div className=\"l-grid__col-4 l-grid__col-8--tab l-grid__col-4--lg\">\n          <div className=\"c-shopping-cart__bitmap\">\n            <i className=\"nes-ash\" />\n            <i className=\"nes-icon is-large heart\" />\n            <i className={`${pokemonBitmapClass}`} />\n          </div>\n          <h2>Seu carrinho de compras</h2>\n          <p className=\"c-shopping-cart__description\">\n            Aqui você encontra os pokémons escolhidos. Caso não queira mais adquirir algum amiguinho\n            em específico, basta removê-lo da lista\n          </p>\n          <p className=\"c-shopping-cart__total\">\n            TOTAL: <i className=\"nes-icon coin is-small\" />\n            {total}\n          </p>\n          <button\n            type=\"button\"\n            className={`nes-btn c-shopping-cart__checkout-btn ${checkoutBtnClass} ${\n              !pokemonOnCart.length ? 'is-disabled' : ''\n            }`}\n            onClick={handleCheckout}\n            disabled={!pokemonOnCart.length}\n          >\n            Finalizar compra\n          </button>\n        </div>\n        <div className=\"l-grid__col-4 l-grid__col-8--tab l-grid__col-8--lg\">\n          {!pokemonOnCart.length && (\n            <div className=\"c-shopping-cart__empty-cart-item\">Carrinho vazio :(</div>\n          )}\n          <CartList>\n            {pokemonOnCart.map((p) => (\n              <CartItem\n                key={`cart-item/${p.id}`}\n                id={p.id}\n                name={p.name}\n                price={p.price}\n                amount={numberOfPokemonById[p.id]}\n                onRemoveFromCart={handleRemovePokemonFromCart}\n              />\n            ))}\n          </CartList>\n        </div>\n      </section>\n      <dialog className=\"nes-dialog\" ref={checkoutDialog}>\n        <form method=\"dialog\">\n          <p>Obrigado pela compra!!</p>\n          <p>Continue aproveitando as nossas lojas :)</p>\n          <button type=\"button\" className=\"nes-btn\" onClick={handleCloseDialog}>\n            Fechar\n          </button>\n        </form>\n      </dialog>\n    </>\n  );\n}\n\nShoppingCart.defaultProps = {\n  pokemonBitmapClass: 'nes-pokeball',\n  checkoutBtnClass: ''\n};\n\nShoppingCart.propTypes = {\n  storeCartKey: PropTypes.string.isRequired,\n  pokemonBitmapClass: PropTypes.string,\n  checkoutBtnClass: PropTypes.string\n};\n\nexport default ShoppingCart;\n","import { useEffect, useReducer, useRef } from 'react';\n\nfunction fetchReducer(state, action) {\n  switch (action.type) {\n    case 'fetch/pending':\n      return { ...state, status: 'loading' };\n    case 'fetch/fulfilled':\n      return { ...state, status: 'succeeded', entities: action.payload };\n    case 'fetch/rejected':\n      return { ...state, status: 'failed', error: action.payload };\n    default:\n      return state;\n  }\n}\n\nfunction useFetch(req, ...params) {\n  const initialState = {\n    status: 'idle',\n    entities: null,\n    error: null\n  };\n\n  const [state, dispatch] = useReducer(fetchReducer, initialState);\n\n  const simpleCache = useRef({});\n\n  useEffect(() => {\n    let terminate = false;\n\n    if (!req) {\n      return;\n    }\n\n    // eslint-disable-next-line consistent-return\n    const fetchData = async () => {\n      dispatch({ type: 'fetch/pending' });\n\n      const key = `${req.toString()}/${params}`.replace('\\n\\t', '');\n\n      if (simpleCache.current[key]) {\n        const data = simpleCache.current[key];\n        dispatch({ type: 'fetch/fulfilled', payload: data });\n      } else {\n        try {\n          const res = await req(...params);\n          simpleCache.current[key] = res;\n\n          if (terminate) {\n            return;\n          }\n\n          dispatch({ type: 'fetch/fulfilled', payload: res });\n        } catch (error) {\n          if (terminate) {\n            return;\n          }\n\n          dispatch({ type: 'fetch/rejected', payload: error.message });\n        }\n      }\n    };\n\n    fetchData();\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      terminate = true;\n    };\n  }, [req, ...params]);\n\n  return state;\n}\n\nexport default useFetch;\n","import { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport './PokemonDetails.scss';\n\nimport { addItemToCart } from 'redux/features/cart/cartSlice';\nimport { selectPriceByPokemonId } from 'redux/features/pokemon/pokemonSlice';\nimport useFetch from 'hooks/useFetch';\n\nimport pokemonService from 'services/pokemonService';\n\nfunction PokemonDetails({ storeCartKey, checkoutBtnClass }) {\n  const { pokemonId } = useParams();\n  const { status, entities: pokemon } = useFetch(pokemonService.getPokemonById, pokemonId);\n\n  const dispatch = useDispatch();\n\n  const price = useSelector(selectPriceByPokemonId(pokemon?.id));\n\n  const handleAddPokemonToCart = (e) => {\n    e.preventDefault();\n    dispatch(addItemToCart({ item: { ...pokemon, price }, store: storeCartKey }));\n  };\n\n  return (\n    <section className=\"l-grid l-grid--tab l-grid--lg c-pokemon-details\">\n      {(status === 'succeeded' && price && (\n        <div className=\"l-grid__col-4 l-grid__col-8--tab l-grid__col-start-4--lg l-grid__col-end-8--lg\">\n          <div className=\"l-flex--column--middle \">\n            <div className=\"l-flex--column--middle c-pokemon-details__panel\">\n              <h3 className=\"c-pokemon-details__pokedex-index\">#{pokemon.id}</h3>\n              <img\n                src={\n                  pokemon?.sprites?.versions['generation-v']['black-white']?.animated?.front_default\n                    ? pokemon?.sprites?.versions['generation-v']['black-white']?.animated\n                        ?.front_default\n                    : pokemon?.sprites?.front_default\n                }\n                alt={`${pokemon.name} front sprite animated`}\n                className=\"c-pokemon-details__sprite\"\n              />\n              <h2>{pokemon.name}</h2>\n            </div>\n            <div className=\"l-flex--column--middle c-pokemon-details__panel\">\n              <h4 className=\"c-pokemon-details__subtitle\">Status Base</h4>\n              <p className=\"c-pokemon-details__stat\">altura: {pokemon.height}</p>\n              <p className=\"c-pokemon-details__stat\">peso: {pokemon.weight}</p>\n              <p className=\"c-pokemon-details__stat\">experiência: {pokemon.base_experience}</p>\n            </div>\n            <div className=\"l-flex--column--middle c-pokemon-details__panel\">\n              <h4 className=\"c-pokemon-details__subtitle\">Galeria shiny</h4>\n              <div className=\"l-flex\">\n                {pokemon?.sprites?.front_shiny && (\n                  <img\n                    src={pokemon?.sprites?.front_shiny}\n                    alt={`${pokemon.name} shiny front sprite`}\n                    className=\"c-pokemon-details__sprite\"\n                  />\n                )}\n                {pokemon?.sprites?.back_shiny && (\n                  <img\n                    src={pokemon?.sprites?.back_shiny}\n                    alt={`${pokemon.name} shiny front sprite`}\n                    className=\"c-pokemon-details__sprite\"\n                  />\n                )}\n              </div>\n            </div>\n            <div className=\"l-flex--column--middle c-pokemon-details__panel\">\n              <h4 className=\"c-pokemon-details__subtitle c-pokemon-details__promo-subtitle--animated\">\n                Oferta por tempo limitado!!\n              </h4>\n              <p>\n                <i className=\"nes-icon coin is-small\" />\n                <span>{price}</span>\n              </p>\n            </div>\n            <button\n              type=\"button\"\n              className={`nes-btn ${checkoutBtnClass}`}\n              onClick={handleAddPokemonToCart}\n            >\n              + Carrinho\n            </button>\n          </div>\n        </div>\n      )) || <p data-testid=\"loading-indicator\">Carregando...</p>}\n    </section>\n  );\n}\n\nPokemonDetails.propTypes = {\n  storeCartKey: PropTypes.string.isRequired,\n  checkoutBtnClass: PropTypes.string\n};\n\nPokemonDetails.defaultProps = {\n  checkoutBtnClass: ''\n};\n\nexport default PokemonDetails;\n","import { Route } from 'react-router-dom';\n\nimport './GrassStore.scss';\n\nimport useSetupStore from 'hooks/useSetupStore';\n\nimport Header from 'components/Header';\nimport StoreHome from '../StoreHome';\nimport ShoppingCart from '../ShoppingCart';\nimport PokemonDetails from '../PokemonDetails';\n\nconst STORE_CART_KEY = process.env.REACT_APP_GRASS_STORE_CART_KEY;\n\nfunction GrassStore() {\n  const {\n    path,\n    searchInputValue,\n    filteredPokemon,\n    status,\n    itemsOnCart,\n    handleSearch,\n    handleSearchInputChange,\n    handleAddPokemonToCart,\n    handleCartClick\n  } = useSetupStore('grass', STORE_CART_KEY);\n\n  return (\n    <section className=\"c-grass-store\">\n      <Header\n        storeName=\"PLANTA STORE\"\n        storePath=\"/grass-store\"\n        searchInputPlaceholder=\"Busque aqui o seu tipo planta\"\n        headerClass=\"c-grass-store__header\"\n        searchBtnClass=\"is-success\"\n        searchInputValue={searchInputValue}\n        itemsCartCounter={itemsOnCart}\n        onSearchInputChange={handleSearchInputChange}\n        onSearch={handleSearch}\n        onCartClick={handleCartClick}\n      />\n\n      <Route exact path={`${path}`}>\n        {(status === 'succeeded' && (\n          <StoreHome\n            pokemon={filteredPokemon}\n            onAddPokemonToCart={handleAddPokemonToCart}\n            path={path}\n          />\n        )) || (\n          <p className=\"l-grid\" style={{ marginTop: '2rem' }}>\n            Carregando...\n          </p>\n        )}\n      </Route>\n      <Route exact path={`${path}/shopping-cart`}>\n        <ShoppingCart\n          storeCartKey={STORE_CART_KEY}\n          pokemonBitmapClass=\"nes-bulbasaur\"\n          checkoutBtnClass=\"is-success\"\n        />\n      </Route>\n      <Route exact path={`${path}/pokemon/:pokemonId`}>\n        <PokemonDetails storeCartKey={STORE_CART_KEY} checkoutBtnClass=\"is-success\" />\n      </Route>\n    </section>\n  );\n}\n\nexport default GrassStore;\n","import { Route } from 'react-router-dom';\n\nimport './FireStore.scss';\n\nimport useSetupStore from 'hooks/useSetupStore';\n\nimport Header from 'components/Header';\nimport StoreHome from '../StoreHome';\nimport ShoppingCart from '../ShoppingCart';\nimport PokemonDetails from '../PokemonDetails';\n\nconst STORE_CART_KEY = process.env.REACT_APP_FIRE_STORE_CART_KEY;\n\nfunction FireStore() {\n  const {\n    path,\n    searchInputValue,\n    filteredPokemon,\n    status,\n    itemsOnCart,\n    handleSearch,\n    handleSearchInputChange,\n    handleAddPokemonToCart,\n    handleCartClick\n  } = useSetupStore('fire', STORE_CART_KEY);\n\n  return (\n    <section className=\"c-fire-store\">\n      <Header\n        storeName=\"FOGO STORE\"\n        storePath=\"/fire-store\"\n        searchInputPlaceholder=\"Busque aqui o seu tipo fogo\"\n        headerClass=\"c-fire-store__header\"\n        searchBtnClass=\"is-error\"\n        searchInputValue={searchInputValue}\n        itemsCartCounter={itemsOnCart}\n        onSearchInputChange={handleSearchInputChange}\n        onSearch={handleSearch}\n        onCartClick={handleCartClick}\n      />\n\n      <Route exact path={`${path}`}>\n        {(status === 'succeeded' && (\n          <StoreHome\n            pokemon={filteredPokemon}\n            onAddPokemonToCart={handleAddPokemonToCart}\n            path={path}\n          />\n        )) || (\n          <p className=\"l-grid\" style={{ marginTop: '2rem' }}>\n            Carregando...\n          </p>\n        )}\n      </Route>\n      <Route exact path={`${path}/shopping-cart`}>\n        <ShoppingCart\n          storeCartKey={STORE_CART_KEY}\n          pokemonBitmapClass=\"nes-charmander\"\n          checkoutBtnClass=\"is-error\"\n        />\n      </Route>\n      <Route exact path={`${path}/pokemon/:pokemonId`}>\n        <PokemonDetails storeCartKey={STORE_CART_KEY} checkoutBtnClass=\"is-error\" />\n      </Route>\n    </section>\n  );\n}\n\nexport default FireStore;\n","import { Route } from 'react-router-dom';\n\nimport './WaterStore.scss';\n\nimport useSetupStore from 'hooks/useSetupStore';\n\nimport Header from 'components/Header';\nimport StoreHome from '../StoreHome';\nimport ShoppingCart from '../ShoppingCart';\nimport PokemonDetails from '../PokemonDetails';\n\nconst STORE_CART_KEY = process.env.REACT_APP_WATER_STORE_CART_KEY;\n\nfunction WaterStore() {\n  const {\n    path,\n    searchInputValue,\n    filteredPokemon,\n    status,\n    itemsOnCart,\n    handleSearch,\n    handleSearchInputChange,\n    handleAddPokemonToCart,\n    handleCartClick\n  } = useSetupStore('water', STORE_CART_KEY);\n\n  return (\n    <section className=\"c-water-store\">\n      <Header\n        storeName=\"ÁGUA STORE\"\n        storePath=\"/water-store\"\n        searchInputPlaceholder=\"Busque aqui o seu tipo água\"\n        headerClass=\"c-water-store__header\"\n        searchBtnClass=\"is-primary\"\n        searchInputValue={searchInputValue}\n        itemsCartCounter={itemsOnCart}\n        onSearchInputChange={handleSearchInputChange}\n        onSearch={handleSearch}\n        onCartClick={handleCartClick}\n      />\n\n      <Route exact path={`${path}`}>\n        {(status === 'succeeded' && (\n          <StoreHome\n            pokemon={filteredPokemon}\n            onAddPokemonToCart={handleAddPokemonToCart}\n            path={path}\n          />\n        )) || (\n          <p className=\"l-grid\" style={{ marginTop: '2rem' }}>\n            Carregando...\n          </p>\n        )}\n      </Route>\n      <Route exact path={`${path}/shopping-cart`}>\n        <ShoppingCart\n          storeCartKey={STORE_CART_KEY}\n          pokemonBitmapClass=\"nes-squirtle\"\n          checkoutBtnClass=\"is-primary\"\n        />\n      </Route>\n      <Route exact path={`${path}/pokemon/:pokemonId`}>\n        <PokemonDetails storeCartKey={STORE_CART_KEY} checkoutBtnClass=\"is-primary\" />\n      </Route>\n    </section>\n  );\n}\n\nexport default WaterStore;\n","import { HashRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport PokeStoreHome from './pages/PokeStoreHome';\nimport GrassStore from './pages/GrassStore';\nimport FireStore from './pages/FireStore';\nimport WaterStore from './pages/WaterStore';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <PokeStoreHome />\n        </Route>\n        <Route path=\"/grass-store\">\n          <GrassStore />\n        </Route>\n        <Route path=\"/fire-store\">\n          <FireStore />\n        </Route>\n        <Route path=\"/water-store\">\n          <WaterStore />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport reportWebVitals from './reportWebVitals';\nimport './assets/scss/global.scss';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}